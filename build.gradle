plugins {
	id 'java'

//	------------------------------------
//	If you want to package runnable `jar` and `war`, Must be required.(***)
//	------------------------------------
	id 'war'

	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'

//	id 'org.springframework.boot' version '2.7.15'
//	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
} // plugins


group = 'org.zerock'
version = '0.0.1-SNAPSHOT'


java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
} // java


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	} // compileOnly

	testCompileOnly {
		extendsFrom testAnnotationProcessor
	} // testCompileOnly
} // configurations


repositories {
	mavenCentral()
} // repositories


dependencies {
	// ---------------------------------------------
	// * Dependencies * can not be declared against
	// 	 the
	// 		runtimeClasspath,
	// 		compileClasspath,
	// 		testCompileClasspath,
	// 		testRuntimeClasspath,
	// 		apiElements
	// 	 configuration.
	// ---------------------------------------------

	// ====================================================================== //
	// 1. Essentially Fundamental Dependencies for Web
	// ====================================================================== //
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

    // ---------------------------------------------------------------------------------------
    // * NOTE *: `spring-session-jdbc` must be used with at least `spring-boot-starter-jdbc`
    // 			 because that `spring-boot-starter-jdbc` includes `spring-jdbc` and `HikariCP`
    // 			 So, if `spring.session.store-type=jdbc`, it needs at least `HikariCP` and `Spring JDBC`.
    // 			 `spring-boot-starter-data-jpa` already includes `spring-boot-starter-jdbc` (***)
	//
    // implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	// implementation 'org.springframework.session:spring-session-jdbc'
    // ---------------------------------------------------------------------------------------


	// ====================================================================== //
	// 2. JDBC Drivers for H2, Oracle MySQL & Oracle OCI
	// ====================================================================== //
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// ---------------------------------------------
	// (*Caution*) Do use this Oracle OCI dependency
	// with `server.tomcat.additional-tld-skip-patterns = *18*, osdt*` property
	// declared in `application.properties` file.
	// ---------------------------------------------
	runtimeOnly('com.oracle.database.jdbc:ojdbc8-production') {
		exclude group: 'com.oracle.database.ha', 	module: 'simplefan'
		exclude group: 'com.oracle.database.ha', 	module: 'ons'
		exclude group: 'com.oracle.database.jdbc', 	module: 'rsi'
		exclude group: 'com.oracle.database.xml', 	module: 'xdb'
		exclude group: 'com.oracle.database.xml', 	module: 'xmlparserv2'
	}


	// ====================================================================== //
	// 3. JPA Provider
	// ====================================================================== //
	// `spring-boot-starter-data-jpa` already includes Hibernate dependencies.
//	implementation 'org.hibernate.orm:hibernate-core:6.2.9.Final'

	implementation 'org.hibernate.orm:hibernate-hikaricp'
} // dependencies


test {
//tasks.named('test') {
	useJUnitPlatform()
} // test

